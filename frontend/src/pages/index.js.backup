import { useState } from 'react';
import Navbar from '../components/Navbar';

function EditLabel({label, type, name, value, changeFunction}) {

    return (
        
        <label className="block mb-4">
        <span className="text-white">{label}</span>
        <input
            type={type}
            name={name}
            value={value}
            onChange={changeFunction}
            className="mt-2 p-2 pl-3 block w-full rounded-xl border-gray-300 shadow-sm bg-gray-300"
        />
        </label>

    )

}

function RegularLabel({label, value}) {

    return (

        <p className="mb-4 text-white">
        <strong>{label}:</strong> {value}
        </p>

    )

}

export default function Home() {
  
    // used to store user details
    const [user, setUser] = useState({

        fname: "John",
        lname: "Doe",
        email: "johndoe@iiit.ac.in",
        age: "1000",
        contact: "1234567890"

    });

    const [isEditing, setIsEditing] = useState(false); // toggle editing
    const [formData, setFormData] = useState(user); // Temporary form data
    const [error, setError] = useState(""); // error shown if any

    const handleInputChange = (e) => {

        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });

    };

    const checkInput = (test, message) => {

        if (!test) {

            setError(message);
            return false;

        }

        return true;

    }

    const handleSave = () => {

        const email_regex = /^[a-zA-Z0-9._%+-]+@(iiit\.ac\.in|[a-zA-Z0-9.-]+\.iiit\.ac\.in)$/; // iiit-h emails

        if (!checkInput(email_regex.test(formData.email), "Email should be a valid IIIT-H email")) return;
        if (!checkInput(/^[0-9]+$/.test(formData.contact), "Phone number should contain numeric digits only")) return;
        if (!checkInput(formData.contact.length == 10, "Phone Number should be 10 digits long")) return;
        
        setError("");
        setUser(formData);
        setIsEditing(false);

    };

    const handleCancel = () => {

        for (var k in user) formData[k] = user[k];

        setError("");
        setIsEditing(false);

    }

    return (

        <div className="bg-gray-700 h-screen v-screen">

            <Navbar />

            <div className="container w-3/4 p-20">

                <h1 className="text-2xl font-bold mb-6 text-white">Profile</h1>

                {isEditing ? (

                    <div className="bg-gray-800 p-6 rounded-xl shadow-md">

                        <div className="flex space-x-10">

                            <div className="w-1/2">
                            <EditLabel label="First Name" type="text" name="fname" value={formData.fname} changeFunction={handleInputChange} />
                            </div>

                            <div className="w-1/2">
                            <EditLabel label="Last Name" type="text" name="lname" value={formData.lname} changeFunction={handleInputChange} />
                            </div>

                        </div>

                        <div className="w-2/2">
                        <EditLabel label="Email" type="email" name="email" value={formData.email} changeFunction={handleInputChange} />
                        </div>

                        <div className="flex space-x-10">

                            <div className="w-1/3">
                            <EditLabel label="Age" type="number" name="age" value={formData.age} changeFunction={handleInputChange} />
                            </div>

                            <div className="w-2/3">
                            <EditLabel label="Contact Number" type="text" name="contact" value={formData.contact} changeFunction={handleInputChange} />
                            </div>

                        </div>

                        {error && <p className="text-red-500">{error}</p>} {/* displayed if there in an error */}

                        <button onClick={handleSave} className="px-4 py-2 mt-6 bg-green-500 text-white rounded-md hover:bg-green-600">Save</button>
                        <button onClick={handleCancel} className="px-4 py-2 mt-6 ml-2 bg-red-500 text-white rounded-md hover:bg-red-600">Cancel</button>

                    </div>

                ) : (

                    <div className="bg-gray-800 p-6 rounded-md shadow-md">

                        <RegularLabel label="Name" value={user.fname + " " + user.lname} />
                        <RegularLabel label="Email" value={user.email} />
                        <RegularLabel label="Age" value={user.age} />
                        <RegularLabel label="Contact Number" value={user.contact} />

                        <button onClick={() => setIsEditing(true)} className="px-4 py-2 mt-6 bg-blue-500 text-white rounded-md hover:bg-blue-600">Edit</button>
                    
                    </div>

                )}

            </div>

        </div>

    );

};
